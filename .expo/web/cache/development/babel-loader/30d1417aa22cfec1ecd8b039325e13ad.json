{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { block } from \"react-native-reanimated\";\nimport bgImg from \"../assets/bg-img.png\";\nimport icon from \"../assets/account-icon.png\";\n\nvar Start = function (_React$Component) {\n  _inherits(Start, _React$Component);\n\n  var _super = _createSuper(Start);\n\n  function Start(props) {\n    var _this;\n\n    _classCallCheck(this, Start);\n\n    _this = _super.call(this, props);\n\n    _this.changeBgColor = function (newColor) {\n      _this.setState({\n        color: newColor\n      });\n    };\n\n    _this.colors = {\n      black: \"#090C08\",\n      purple: \"#474056\",\n      blue: \"#8A95A5\",\n      yellow: \"#B9C6AE\"\n    };\n    _this.state = {\n      name: \"\",\n      color: \"\"\n    };\n    return _this;\n  }\n\n  _createClass(Start, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(View, {\n        style: styles.container\n      }, React.createElement(ImageBackground, {\n        source: bgImg,\n        resizeMode: \"cover\",\n        style: styles.image\n      }, React.createElement(Text, {\n        style: styles.header\n      }, \"Chatter Box\"), React.createElement(View, {\n        style: styles.box1\n      }, React.createElement(View, {\n        style: styles.textBoxWrapper\n      }, React.createElement(Image, {\n        source: icon,\n        fadeDuration: 0,\n        style: styles.icon\n      }), React.createElement(TextInput, {\n        style: styles.textInput,\n        onChangeText: function onChangeText(name) {\n          return _this2.setState({\n            name: name\n          });\n        },\n        value: this.state.name,\n        placeholder: \"Your Name\"\n      })), React.createElement(View, {\n        style: styles.bgColor\n      }, React.createElement(Text, {\n        style: styles.bgText\n      }, \"Choose Background Color:\"), React.createElement(View, {\n        style: styles.bgSamplesWrapper\n      }, React.createElement(TouchableOpacity, {\n        style: [styles.bgColorButton, styles.bgColor1],\n        onPress: function onPress() {\n          _this2.changeBgColor(_this2.colors.black);\n        }\n      }), React.createElement(TouchableOpacity, {\n        style: [styles.bgColorButton, styles.bgColor2]\n      }), React.createElement(TouchableOpacity, {\n        style: [styles.bgColorButton, styles.bgColor3]\n      }), React.createElement(TouchableOpacity, {\n        style: [styles.bgColorButton, styles.bgColor4]\n      }))), React.createElement(TouchableOpacity, {\n        style: styles.button,\n        onPress: function onPress() {\n          return _this2.props.navigation.navigate(\"Chat\", {\n            name: _this2.state.name\n          });\n        }\n      }, React.createElement(Text, {\n        style: styles.buttonText\n      }, \"Start Chatting\")))));\n    }\n  }]);\n\n  return Start;\n}(React.Component);\n\nexport { Start as default };\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: \"center\",\n    flexDirection: \"column\"\n  },\n  image: {\n    flex: 1,\n    width: \"100%\",\n    alignItems: \"center\",\n    flexDirection: \"column\"\n  },\n  header: {\n    textAlign: \"center\",\n    marginTop: 100,\n    marginBottom: 150,\n    fontSize: 45,\n    fontWeight: \"bold\",\n    color: \"#FFFFFF\"\n  },\n  box1: {\n    backgroundColor: \"white\",\n    width: \"88%\",\n    marginBottom: \"12%\",\n    padding: \"6%\",\n    borderRadius: 5\n  },\n  textBoxWrapper: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    height: 50,\n    borderColor: \"gray\",\n    borderWidth: 1,\n    borderRadius: 5,\n    paddingLeft: 10,\n    marginBottom: \"6%\"\n  },\n  icon: {\n    padding: 10,\n    margin: 5,\n    height: 30,\n    width: 30,\n    resizeMode: \"stretch\"\n  },\n  textInput: {\n    fontSize: 16,\n    fontWeight: \"300\",\n    color: \"#757083\",\n    height: \"100%\",\n    width: \"100%\",\n    padding: 10\n  },\n  bgColor: {\n    marginBottom: \"6%\"\n  },\n  bgText: {\n    fontSize: 16,\n    fontWeight: \"300\",\n    color: \"#757083\"\n  },\n  bgSamplesWrapper: {\n    flexDirection: \"row\"\n  },\n  bgColorButton: {\n    height: 40,\n    width: 40,\n    borderRadius: 20,\n    marginLeft: 10,\n    marginRight: 10,\n    marginTop: 10\n  },\n  bgColor1: {\n    backgroundColor: \"#090C08\"\n  },\n  bgColor2: {\n    backgroundColor: \"#474056\"\n  },\n  bgColor3: {\n    backgroundColor: \"#8A95A5\"\n  },\n  bgColor4: {\n    backgroundColor: \"#B9C6AE\"\n  },\n  button: {\n    alignItems: \"center\",\n    padding: 10,\n    fontSize: 16,\n    fontWeight: \"bold\",\n    color: \"#FFFFFF\",\n    backgroundColor: \"#757083\",\n    borderRadius: 5,\n    height: 50,\n    justifyContent: \"center\"\n  },\n  buttonText: {\n    fontSize: 16,\n    fontWeight: \"bold\",\n    color: \"#FFFFFF\"\n  }\n});","map":{"version":3,"sources":["/Users/christiannikodemus/Developer/CF/05 Native App Development & React Native/chatter-box/components/Start.js"],"names":["React","block","bgImg","icon","Start","props","changeBgColor","newColor","setState","color","colors","black","purple","blue","yellow","state","name","styles","container","image","header","box1","textBoxWrapper","textInput","bgColor","bgText","bgSamplesWrapper","bgColorButton","bgColor1","bgColor2","bgColor3","bgColor4","button","navigation","navigate","buttonText","Component","StyleSheet","create","flex","alignItems","flexDirection","width","textAlign","marginTop","marginBottom","fontSize","fontWeight","backgroundColor","padding","borderRadius","height","borderColor","borderWidth","paddingLeft","margin","resizeMode","marginLeft","marginRight","justifyContent"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {\n  StyleSheet,\n  View,\n  Text,\n  TextInput,\n  Button,\n  Alert,\n  ScrollView,\n  ImageBackground,\n  Image,\n  TouchableOpacity,\n} from \"react-native\";\nimport { block } from \"react-native-reanimated\";\n//import { TouchableOpacity } from \"react-native-web\";\n\n//Import images\nimport bgImg from \"../assets/bg-img.png\";\nimport icon from \"../assets/account-icon.png\";\n\nexport default class Start extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: \"\",\n      color: \"\",\n    };\n  }\n\n  changeBgColor = (newColor) => {\n    this.setState({ color: newColor });\n  };\n\n  // background color choices\n  colors = {\n    black: \"#090C08\",\n    purple: \"#474056\",\n    blue: \"#8A95A5\",\n    yellow: \"#B9C6AE\",\n  };\n\n  render() {\n    return (\n      <View style={styles.container}>\n        <ImageBackground source={bgImg} resizeMode=\"cover\" style={styles.image}>\n          <Text style={styles.header}>Chatter Box</Text>\n          <View style={styles.box1}>\n            <View style={styles.textBoxWrapper}>\n              <Image source={icon} fadeDuration={0} style={styles.icon} />\n              <TextInput\n                style={styles.textInput}\n                onChangeText={(name) => this.setState({ name })}\n                value={this.state.name}\n                placeholder=\"Your Name\"\n              />\n            </View>\n\n            <View style={styles.bgColor}>\n              <Text style={styles.bgText}>Choose Background Color:</Text>\n              <View style={styles.bgSamplesWrapper}>\n                <TouchableOpacity\n                  style={[styles.bgColorButton, styles.bgColor1]}\n                  onPress={() => {\n                    this.changeBgColor(this.colors.black);\n                    //console.log(this.state.color);\n                  }}\n                ></TouchableOpacity>\n                <TouchableOpacity\n                  style={[styles.bgColorButton, styles.bgColor2]}\n                ></TouchableOpacity>\n                <TouchableOpacity\n                  style={[styles.bgColorButton, styles.bgColor3]}\n                ></TouchableOpacity>\n                <TouchableOpacity\n                  style={[styles.bgColorButton, styles.bgColor4]}\n                ></TouchableOpacity>\n              </View>\n            </View>\n\n            <TouchableOpacity\n              style={styles.button}\n              // title=\"Start Chatting\"\n              onPress={() =>\n                this.props.navigation.navigate(\"Chat\", {\n                  name: this.state.name,\n                })\n              }\n            >\n              <Text style={styles.buttonText}>Start Chatting</Text>\n            </TouchableOpacity>\n          </View>\n        </ImageBackground>\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: \"center\",\n    //justifyContent: \"center\",\n    flexDirection: \"column\",\n  },\n  image: {\n    flex: 1,\n    width: \"100%\",\n    alignItems: \"center\",\n    flexDirection: \"column\",\n  },\n  header: {\n    textAlign: \"center\",\n    marginTop: 100,\n    marginBottom: 150,\n    fontSize: 45,\n    fontWeight: \"bold\",\n    color: \"#FFFFFF\",\n  },\n  box1: {\n    backgroundColor: \"white\",\n    //flex: 1,\n    //justifyContent: \"flex-end\",\n    width: \"88%\",\n    marginBottom: \"12%\",\n    padding: \"6%\",\n    borderRadius: 5,\n  },\n  textBoxWrapper: {\n    flexDirection: \"row\",\n    //justifyContent: \"center\",\n    alignItems: \"center\",\n    height: 50,\n    borderColor: \"gray\",\n    borderWidth: 1,\n    borderRadius: 5,\n    paddingLeft: 10,\n    marginBottom: \"6%\",\n  },\n  icon: {\n    padding: 10,\n    margin: 5,\n    height: 30,\n    width: 30,\n    resizeMode: \"stretch\",\n  },\n  textInput: {\n    fontSize: 16,\n    fontWeight: \"300\",\n    color: \"#757083\",\n    height: \"100%\",\n    width: \"100%\",\n    padding: 10,\n    //opacity: \"50%\",\n  },\n  bgColor: {\n    marginBottom: \"6%\",\n  },\n  bgText: {\n    fontSize: 16,\n    fontWeight: \"300\",\n    color: \"#757083\",\n    //opacity: \"100%\",\n  },\n  bgSamplesWrapper: {\n    flexDirection: \"row\",\n  },\n  bgColorButton: {\n    height: 40,\n    width: 40,\n    borderRadius: 20,\n    marginLeft: 10,\n    marginRight: 10,\n    marginTop: 10,\n  },\n  bgColor1: {\n    backgroundColor: \"#090C08\",\n  },\n  bgColor2: {\n    backgroundColor: \"#474056\",\n  },\n  bgColor3: {\n    backgroundColor: \"#8A95A5\",\n  },\n  bgColor4: {\n    backgroundColor: \"#B9C6AE\",\n  },\n  button: {\n    alignItems: \"center\",\n    padding: 10,\n    fontSize: 16,\n    fontWeight: \"bold\",\n    color: \"#FFFFFF\",\n    backgroundColor: \"#757083\",\n    borderRadius: 5,\n    height: 50,\n    justifyContent: \"center\",\n  },\n  buttonText: {\n    fontSize: 16,\n    fontWeight: \"bold\",\n    color: \"#FFFFFF\",\n  },\n});\n"]},"metadata":{},"sourceType":"module"}